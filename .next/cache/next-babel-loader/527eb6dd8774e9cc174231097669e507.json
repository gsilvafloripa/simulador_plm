{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/jackson/www/github/simulador_plm/src/context/files.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState, createContext, useEffect, useCallback, useContext } from 'react';\nimport axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport filesize from 'filesize';\nvar FileContext = /*#__PURE__*/createContext({});\nexport var FileProvider = function FileProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      uploadedFiles = _useState[0],\n      setUploadedFiles = _useState[1];\n\n  useEffect(function () {\n    axios.get('/api/upload/').then(function (response) {\n      var postFormatted = [];\n      postFormatted.push({\n        id: response.data._id,\n        name: response.data.name,\n        readableSize: filesize(response.data.size),\n        uploaded: true,\n        preview: response.data.url,\n        file: null,\n        error: false,\n        url: response.data.url\n      });\n      setUploadedFiles(postFormatted);\n    });\n  }, []);\n  var updateFile = useCallback(function (id, data) {\n    setUploadedFiles(function (state) {\n      return state.map(function (file) {\n        return file.id === id ? _objectSpread(_objectSpread({}, file), data) : file;\n      });\n    });\n  }, []);\n  var processUpload = useCallback(function (uploadedFile) {\n    var data = new FormData();\n\n    if (uploadedFile.file) {\n      data.append('image', uploadedFile.file, uploadedFile.name);\n      axios.post('/api/upload/', data, {\n        headers: {\n          'content-type': 'multipart/form-data'\n        },\n        onUploadProgress: function onUploadProgress(progressEvent) {\n          var progress = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n          console.log(\"A imagem \".concat(uploadedFile.name, \" est\\xE1 \").concat(progress, \"% carregada... \"));\n          updateFile(uploadedFile.id, {\n            progress: progress\n          });\n        }\n      }).then(function (response) {\n        console.log(\"A imagem \".concat(uploadedFile.name, \" j\\xE1 foi enviada para o servidor!\"));\n        updateFile(uploadedFile.id, {\n          uploaded: true,\n          id: uploadedFile.id,\n          preview: response.data.url,\n          url: response.data.url\n        });\n      })[\"catch\"](function (err) {\n        console.error(\"Houve um problema para fazer upload da imagem \".concat(uploadedFile.name));\n        console.log(err);\n        updateFile(uploadedFile.id, {\n          error: true\n        });\n      });\n    }\n  }, [updateFile]);\n  var handleUpload = useCallback(function (files) {\n    var newUploadedFiles = files.map(function (file) {\n      return {\n        file: file,\n        id: uuidv4(),\n        name: file.name,\n        readableSize: filesize(file.size),\n        preview: \"/uploads/\".concat(file.name),\n        progress: 0,\n        uploaded: false,\n        error: false,\n        url: \"/uploads/\".concat(file.name)\n      };\n    });\n    setUploadedFiles(function (state) {\n      return state.concat(newUploadedFiles);\n    });\n    newUploadedFiles.forEach(processUpload);\n  }, [processUpload]);\n  var deleteFile = useCallback(function (name) {\n    axios[\"delete\"](\"api/upload/?fileName=\".concat(name));\n    setUploadedFiles(function (state) {\n      return state.filter(function (file) {\n        return file.name !== name;\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(FileContext.Provider, {\n    value: {\n      uploadedFiles: uploadedFiles,\n      deleteFile: deleteFile,\n      handleUpload: handleUpload\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(FileProvider, \"/NVGgjs0xcCad7eqZ9Qv9Yv5r6E=\");\n\n_c = FileProvider;\nexport var useFiles = function useFiles() {\n  _s2();\n\n  var context = useContext(FileContext);\n\n  if (!context) {\n    throw new Error('useFiles must be used within FileProvider');\n  }\n\n  return context;\n};\n\n_s2(useFiles, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"FileProvider\");","map":{"version":3,"sources":["/home/jackson/www/github/simulador_plm/src/context/files.tsx"],"names":["React","useState","createContext","useEffect","useCallback","useContext","axios","v4","uuidv4","filesize","FileContext","FileProvider","children","uploadedFiles","setUploadedFiles","get","then","response","postFormatted","push","id","data","_id","name","readableSize","size","uploaded","preview","url","file","error","updateFile","state","map","processUpload","uploadedFile","FormData","append","post","headers","onUploadProgress","progressEvent","progress","Math","round","loaded","total","console","log","err","handleUpload","files","newUploadedFiles","concat","forEach","deleteFile","filter","useFiles","context","Error"],"mappings":"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","sourcesContent":["import React, {\n\tuseState,\n\tcreateContext,\n\tuseEffect,\n\tuseCallback,\n\tuseContext\n} from 'react'\nimport axios from 'axios'\nimport Image from 'next/image'\nimport { v4 as uuidv4 } from 'uuid'\nimport filesize from 'filesize'\n\nexport interface IImage {\n\t_id: string\n\tname: string\n\tsize: number\n\tkey: string\n\turl: string\n}\n\nexport interface IFile {\n\tid: string\n\tname: string\n\treadableSize: string\n\tuploaded?: boolean\n\tpreview: string\n\tfile: File | null\n\tprogress?: number\n\terror?: boolean\n\turl: string\n}\n\ninterface IFileContextData {\n\tuploadedFiles: IFile[]\n\tdeleteFile(id: string): void\n\thandleUpload(file: any): void\n}\n\nconst FileContext = createContext<IFileContextData>({} as IFileContextData)\n\nexport const FileProvider: React.FC = ({ children }) => {\n\tconst [uploadedFiles, setUploadedFiles] = useState<IFile[]>([])\n\n\tuseEffect(() => {\n\t\taxios.get('/api/upload/').then(response => {\n\t\t\tconst postFormatted: IFile[] = []\n\t\t\tpostFormatted.push({\n\t\t\t\tid: response.data._id,\n\t\t\t\tname: response.data.name,\n\t\t\t\treadableSize: filesize(response.data.size),\n\t\t\t\tuploaded: true,\n\t\t\t\tpreview: response.data.url,\n\t\t\t\tfile: null,\n\t\t\t\terror: false,\n\t\t\t\turl: response.data.url\n\t\t\t})\n\n\t\t\tsetUploadedFiles(postFormatted)\n\t\t})\n\t}, [])\n\n\tconst updateFile = useCallback((id, data) => {\n\t\tsetUploadedFiles(state =>\n\t\t\tstate.map(file => (file.id === id ? { ...file, ...data } : file))\n\t\t)\n\t}, [])\n\n\tconst processUpload = useCallback(\n\t\t(uploadedFile: IFile) => {\n\t\t\tconst data = new FormData()\n\t\t\tif (uploadedFile.file) {\n\t\t\t\tdata.append('image', uploadedFile.file, uploadedFile.name)\n\n\t\t\t\taxios\n\t\t\t\t\t.post('/api/upload/', data, {\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t'content-type': 'multipart/form-data'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonUploadProgress: progressEvent => {\n\t\t\t\t\t\t\tconst progress: number = Math.round(\n\t\t\t\t\t\t\t\t(progressEvent.loaded * 100) / progressEvent.total\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t`A imagem ${uploadedFile.name} está ${progress}% carregada... `\n\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\tupdateFile(uploadedFile.id, { progress })\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.then(response => {\n\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t`A imagem ${uploadedFile.name} já foi enviada para o servidor!`\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tupdateFile(uploadedFile.id, {\n\t\t\t\t\t\t\tuploaded: true,\n\t\t\t\t\t\t\tid: uploadedFile.id,\n\t\t\t\t\t\t\tpreview: response.data.url,\n\t\t\t\t\t\t\turl: response.data.url\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t\t`Houve um problema para fazer upload da imagem ${uploadedFile.name}`\n\t\t\t\t\t\t)\n\t\t\t\t\t\tconsole.log(err)\n\n\t\t\t\t\t\tupdateFile(uploadedFile.id, {\n\t\t\t\t\t\t\terror: true\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\t[updateFile]\n\t)\n\n\tconst handleUpload = useCallback(\n\t\t(files: File[]) => {\n\t\t\tconst newUploadedFiles: IFile[] = files.map((file: File) => ({\n\t\t\t\tfile,\n\t\t\t\tid: uuidv4(),\n\t\t\t\tname: file.name,\n\t\t\t\treadableSize: filesize(file.size),\n\t\t\t\tpreview: `/uploads/${file.name}`,\n\t\t\t\tprogress: 0,\n\t\t\t\tuploaded: false,\n\t\t\t\terror: false,\n\t\t\t\turl: `/uploads/${file.name}`\n\t\t\t}))\n\n\t\t\tsetUploadedFiles(state => state.concat(newUploadedFiles))\n\t\t\tnewUploadedFiles.forEach(processUpload)\n\t\t},\n\t\t[processUpload]\n\t)\n\n\tconst deleteFile = useCallback((name: string) => {\n\t\taxios.delete(`api/upload/?fileName=${name}`)\n\t\tsetUploadedFiles(state => state.filter(file => file.name !== name))\n\t}, [])\n\n\treturn (\n\t\t<FileContext.Provider value={{ uploadedFiles, deleteFile, handleUpload }}>\n\t\t\t{children}\n\t\t</FileContext.Provider>\n\t)\n}\n\nexport const useFiles = (): IFileContextData => {\n\tconst context = useContext(FileContext)\n\n\tif (!context) {\n\t\tthrow new Error('useFiles must be used within FileProvider')\n\t}\n\n\treturn context\n}\n"]},"metadata":{},"sourceType":"module"}