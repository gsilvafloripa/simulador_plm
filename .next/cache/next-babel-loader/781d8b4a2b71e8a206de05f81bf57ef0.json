{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/jackson/www/github/simulador_plm/src/components/showCase/customization/shield/upload/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { useFiles } from '../../../../../context/files';\nimport { DropContainer, UploadMessage } from './styles';\n\nfunction Upload() {\n  _s();\n\n  var _this = this;\n\n  var _useFiles = useFiles(),\n      handleUpload = _useFiles.handleUpload;\n\n  var onDrop = useCallback(function (files) {\n    handleUpload(files);\n  }, [handleUpload]);\n\n  var _useDropzone = useDropzone({\n    accept: ['image/jpeg', 'image/pjpeg', 'image/png', 'image/gif'],\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      isDragReject = _useDropzone.isDragReject;\n\n  var renderDragMessage = useCallback(function () {\n    if (!isDragActive) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        children: \"Arraste imagens aqui...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, _this);\n    }\n\n    if (isDragReject) {\n      return /*#__PURE__*/_jsxDEV(UploadMessage, {\n        typeMessage: \"error\",\n        children: \"Tipo de arquivo n\\xE3o suportado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, _this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(UploadMessage, {\n      typeMessage: \"success\",\n      children: \"Solte as imagens aqui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, _this);\n  }, [isDragActive, isDragReject]);\n  return /*#__PURE__*/_jsxDEV(DropContainer, _objectSpread(_objectSpread({}, getRootProps()), {}, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", _objectSpread({}, getInputProps()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this), renderDragMessage()]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Upload, \"Te3//2DIYjoNdl14qUHvu3bSxOo=\", false, function () {\n  return [useFiles, useDropzone];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/home/jackson/www/github/simulador_plm/src/components/showCase/customization/shield/upload/index.tsx"],"names":["React","useCallback","useDropzone","useFiles","DropContainer","UploadMessage","Upload","handleUpload","onDrop","files","accept","getRootProps","getInputProps","isDragActive","isDragReject","renderDragMessage"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,8BAAzB;AAEA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,UAA7C;;AAEA,SAASC,MAAT,GAA+B;AAAA;;AAAA;;AAAA,kBACLH,QAAQ,EADH;AAAA,MACtBI,YADsB,aACtBA,YADsB;;AAG9B,MAAMC,MAAM,GAAGP,WAAW,CACzB,UAAAQ,KAAK,EAAI;AACRF,IAAAA,YAAY,CAACE,KAAD,CAAZ;AACA,GAHwB,EAIzB,CAACF,YAAD,CAJyB,CAA1B;;AAH8B,qBAe1BL,WAAW,CAAC;AACfQ,IAAAA,MAAM,EAAE,CAAC,YAAD,EAAe,aAAf,EAA8B,WAA9B,EAA2C,WAA3C,CADO;AAEfF,IAAAA,MAAM,EAANA;AAFe,GAAD,CAfe;AAAA,MAW7BG,YAX6B,gBAW7BA,YAX6B;AAAA,MAY7BC,aAZ6B,gBAY7BA,aAZ6B;AAAA,MAa7BC,YAb6B,gBAa7BA,YAb6B;AAAA,MAc7BC,YAd6B,gBAc7BA,YAd6B;;AAoB9B,MAAMC,iBAAiB,GAAGd,WAAW,CAAC,YAAM;AAC3C,QAAI,CAACY,YAAL,EAAmB;AAClB,0BAAO,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACA;;AAED,QAAIC,YAAJ,EAAkB;AACjB,0BACC,QAAC,aAAD;AAAe,QAAA,WAAW,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD;AAKA;;AACD,wBACC,QAAC,aAAD;AAAe,MAAA,WAAW,EAAC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD;AAGA,GAfoC,EAelC,CAACD,YAAD,EAAeC,YAAf,CAfkC,CAArC;AAiBA,sBACC,QAAC,aAAD,kCAAmBH,YAAY,EAA/B;AAAA,4BACC,mCAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA,YADD,EAEEG,iBAAiB,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA;;GA3CQT,M;UACiBH,Q,EAcrBD,W;;;KAfII,M;AA6CT,eAAeA,MAAf","sourcesContent":["import React, { useCallback } from 'react'\nimport { useDropzone } from 'react-dropzone'\nimport { useFiles } from '../../../../../context/files'\n\nimport { DropContainer, UploadMessage } from './styles'\n\nfunction Upload(): JSX.Element {\n\tconst { handleUpload } = useFiles()\n\n\tconst onDrop = useCallback(\n\t\tfiles => {\n\t\t\thandleUpload(files)\n\t\t},\n\t\t[handleUpload]\n\t)\n\n\tconst {\n\t\tgetRootProps,\n\t\tgetInputProps,\n\t\tisDragActive,\n\t\tisDragReject\n\t} = useDropzone({\n\t\taccept: ['image/jpeg', 'image/pjpeg', 'image/png', 'image/gif'],\n\t\tonDrop\n\t})\n\n\tconst renderDragMessage = useCallback(() => {\n\t\tif (!isDragActive) {\n\t\t\treturn <UploadMessage>Arraste imagens aqui...</UploadMessage>\n\t\t}\n\n\t\tif (isDragReject) {\n\t\t\treturn (\n\t\t\t\t<UploadMessage typeMessage=\"error\">\n\t\t\t\t\tTipo de arquivo n√£o suportado\n\t\t\t\t</UploadMessage>\n\t\t\t)\n\t\t}\n\t\treturn (\n\t\t\t<UploadMessage typeMessage=\"success\">Solte as imagens aqui</UploadMessage>\n\t\t)\n\t}, [isDragActive, isDragReject])\n\n\treturn (\n\t\t<DropContainer {...getRootProps()}>\n\t\t\t<input {...getInputProps()} />\n\t\t\t{renderDragMessage()}\n\t\t</DropContainer>\n\t)\n}\n\nexport default Upload\n"]},"metadata":{},"sourceType":"module"}