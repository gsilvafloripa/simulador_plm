{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/jackson/www/github/simulador_plm/src/components/picker/index.tsx\";\nimport React, { createRef, useState } from 'react';\nimport { GithubPicker } from 'react-color';\nimport * as Styles from './styles';\nexport const Picker = ({\n  colorDefault,\n  onChange,\n  position\n}) => {\n  const ref = /*#__PURE__*/createRef();\n  const {\n    0: pickerVisible,\n    1: setPickerVisible\n  } = useState(false);\n  const {\n    0: color,\n    1: setColor\n  } = useState(colorDefault); // constrola se o picker está ou não visível\n\n  const onTogglePicker = () => {\n    setPickerVisible(!pickerVisible);\n  };\n\n  const onChangeComplete = event => {\n    // fecha o picker\n    onTogglePicker(); // repassa para o componente color a cor selecionada\n\n    onChange(event.hex, position); // seta a color selecionada\n\n    setColor(event.hex);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styles.container, {\n    children: [/*#__PURE__*/_jsxDEV(Styles.buttonSelect, {\n      color: color,\n      onClick: onTogglePicker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this), pickerVisible && /*#__PURE__*/_jsxDEV(Styles.picker, {\n      children: /*#__PURE__*/_jsxDEV(GithubPicker, {\n        width: 137,\n        triangle: \"hide\",\n        color: color,\n        onChangeComplete: onChangeComplete,\n        onMouseDown: () => console.log('saiu')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\nexport default Picker;","map":{"version":3,"sources":["/home/jackson/www/github/simulador_plm/src/components/picker/index.tsx"],"names":["React","createRef","useState","GithubPicker","Styles","Picker","colorDefault","onChange","position","ref","pickerVisible","setPickerVisible","color","setColor","onTogglePicker","onChangeComplete","event","hex","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA8CC,QAA9C,QAA8D,OAA9D;AAEA,SAASC,YAAT,QAA6B,aAA7B;AAEA,OAAO,KAAKC,MAAZ,MAAwB,UAAxB;AAQA,OAAO,MAAMC,MAAyB,GAAG,CAAC;AACzCC,EAAAA,YADyC;AAEzCC,EAAAA,QAFyC;AAGzCC,EAAAA;AAHyC,CAAD,KAInC;AACL,QAAMC,GAAG,gBAAGR,SAAS,EAArB;AAEA,QAAM;AAAA,OAACS,aAAD;AAAA,OAAgBC;AAAhB,MAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBX,QAAQ,CAACI,YAAD,CAAlC,CAJK,CAML;;AACA,QAAMQ,cAAc,GAAG,MAAY;AAClCH,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACA,GAFD;;AAIA,QAAMK,gBAAgB,GAAIC,KAAD,IAAiB;AACzC;AACAF,IAAAA,cAAc,GAF2B,CAIzC;;AACAP,IAAAA,QAAQ,CAACS,KAAK,CAACC,GAAP,EAAYT,QAAZ,CAAR,CALyC,CAOzC;;AACAK,IAAAA,QAAQ,CAACG,KAAK,CAACC,GAAP,CAAR;AACA,GATD;;AAWA,sBACC,QAAC,MAAD,CAAQ,SAAR;AAAA,4BACC,QAAC,MAAD,CAAQ,YAAR;AAAqB,MAAA,KAAK,EAAEL,KAA5B;AAAmC,MAAA,OAAO,EAAEE;AAA5C;AAAA;AAAA;AAAA;AAAA,YADD,EAEEJ,aAAa,iBACb,QAAC,MAAD,CAAQ,MAAR;AAAA,6BACC,QAAC,YAAD;AACC,QAAA,KAAK,EAAE,GADR;AAEC,QAAA,QAAQ,EAAC,MAFV;AAGC,QAAA,KAAK,EAAEE,KAHR;AAIC,QAAA,gBAAgB,EAAEG,gBAJnB;AAKC,QAAA,WAAW,EAAE,MAAMG,OAAO,CAACC,GAAR,CAAY,MAAZ;AALpB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA,CA1CM;AA4CP,eAAed,MAAf","sourcesContent":["import React, { createRef, useEffect, useRef, useState } from 'react'\n\nimport { GithubPicker } from 'react-color'\n\nimport * as Styles from './styles'\n\ninterface IPicker {\n\tcolorDefault: string\n\tonChange: (arg0: string, arg1: number) => void\n\tposition?: number\n}\n\nexport const Picker: React.FC<IPicker> = ({\n\tcolorDefault,\n\tonChange,\n\tposition\n}) => {\n\tconst ref = createRef()\n\n\tconst [pickerVisible, setPickerVisible] = useState(false)\n\tconst [color, setColor] = useState(colorDefault)\n\n\t// constrola se o picker está ou não visível\n\tconst onTogglePicker = (): void => {\n\t\tsetPickerVisible(!pickerVisible)\n\t}\n\n\tconst onChangeComplete = (event): void => {\n\t\t// fecha o picker\n\t\tonTogglePicker()\n\n\t\t// repassa para o componente color a cor selecionada\n\t\tonChange(event.hex, position)\n\n\t\t// seta a color selecionada\n\t\tsetColor(event.hex)\n\t}\n\n\treturn (\n\t\t<Styles.container>\n\t\t\t<Styles.buttonSelect color={color} onClick={onTogglePicker} />\n\t\t\t{pickerVisible && (\n\t\t\t\t<Styles.picker>\n\t\t\t\t\t<GithubPicker\n\t\t\t\t\t\twidth={137}\n\t\t\t\t\t\ttriangle=\"hide\"\n\t\t\t\t\t\tcolor={color}\n\t\t\t\t\t\tonChangeComplete={onChangeComplete}\n\t\t\t\t\t\tonMouseDown={() => console.log('saiu')}\n\t\t\t\t\t/>\n\t\t\t\t</Styles.picker>\n\t\t\t)}\n\t\t</Styles.container>\n\t)\n}\n\nexport default Picker\n"]},"metadata":{},"sourceType":"module"}